{
	"name": "Ingestion_L1",
	"properties": {
		"description": "This pipeline will copy objects from one group. The objects belonging to this group will be copied parallelly.",
		"activities": [
			{
				"name": "ListObjectsFromOneGroup",
				"description": "List objects from one group and iterate each of them to downstream activities",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.ObjectsPerGroupToCopy",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "RouteJobsBasedOnLoadingBehavior",
							"description": "Check the loading behavior for each object if it requires full load or incremental load. If it is Default or FullLoad case, do full load. If it is DeltaLoad case, do incremental load.",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "GetObjectColumnMapping",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@json(item().DataLoadingBehaviorSettings).dataLoadingBehavior",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "FullLoad",
										"activities": [
											{
												"name": "FullLoadOneObject",
												"description": "Take a full snapshot on this object and copy it to the destination",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{item().SourceSchemaName}.@{item().SourceObjectName}"
													},
													{
														"name": "Destination",
														"value": "@{item().SinkSchemaName}.@{item().SinkObjectName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "@json(item().CopySourceSettings).sqlReaderQuery",
															"type": "Expression"
														},
														"isolationLevel": {
															"value": "@json(item().CopySourceSettings).isolationLevel",
															"type": "Expression"
														},
														"partitionOption": {
															"value": "@json(item().CopySourceSettings).partitionOption",
															"type": "Expression"
														},
														"partitionSettings": {
															"partitionColumnName": {
																"value": "@json(item().CopySourceSettings).partitionColumnName",
																"type": "Expression"
															},
															"partitionUpperBound": {
																"value": "@json(item().CopySourceSettings).partitionUpperBound",
																"type": "Expression"
															},
															"partitionLowerBound": {
																"value": "@json(item().CopySourceSettings).partitionLowerBound",
																"type": "Expression"
															},
															"partitionNames": "@json(item().CopySourceSettings).partitionNames"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBatchSize": {
															"value": "@json(item().CopySinkSettings).writeBatchSize",
															"type": "Expression"
														},
														"preCopyScript": {
															"value": "@{json(item().CopySinkSettings).preCopyScript}",
															"type": "Expression"
														},
														"maxConcurrentConnections": {
															"value": "@json(item().CopySinkSettings).maxConcurrentConnections",
															"type": "Expression"
														},
														"writeBehavior": {
															"value": "@json(item().CopySinkSettings).writeBehavior",
															"type": "Expression"
														},
														"sqlWriterUseTableLock": {
															"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
															"type": "Expression"
														},
														"upsertSettings": {
															"value": "@json(item().CopySinkSettings).upsertSettings",
															"type": "Expression"
														},
														"tableOption": {
															"value": "@{json(item().CopySinkSettings).tableOption}",
															"type": "Expression"
														},
														"disableMetricsCollection": {
															"value": "@json(item().CopySinkSettings).disableMetricsCollection",
															"type": "Expression"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"translator": {
														"value": "@json(\n    concat(\n        '{\n            \"type\": \"TabularTranslator\",\n            \"mappings\": ',    \n            activity('GetObjectColumnMapping').output.firstRow.JSON_OUTPUT,\n            ',\n            \"typeConversion\": true,\n            \"typeConversionSettings\": {\n                \"allowDataTruncation\": true,\n                \"treatBooleanAsNumber\": false\n            }\n        }'\n    )\n)",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "ds_asql_Source",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@item().SourceSchemaName",
																"type": "Expression"
															},
															"ObjectName": {
																"value": "@item().SourceObjectName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_asql_Bronze",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@item().SinkSchemaName",
																"type": "Expression"
															},
															"ObjectName": {
																"value": "@item().SinkObjectName",
																"type": "Expression"
															}
														}
													}
												]
											}
										]
									},
									{
										"value": "DeltaLoad",
										"activities": [
											{
												"name": "GetMaxWatermarkValue",
												"description": "Query the source object to get the max value from watermark column",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select max([@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}]) as CurrentMaxWaterMarkColumnValue from [@{item().SourceSchemaName}].[@{item().SourceObjectName}]",
															"type": "Expression"
														},
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "ds_asql_Source",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@item().SourceSchemaName",
																"type": "Expression"
															},
															"ObjectName": {
																"value": "@item().SourceObjectName",
																"type": "Expression"
															}
														}
													}
												}
											},
											{
												"name": "DeltaLoadOneObject",
												"description": "Copy the changed data only from last time via comparing the value in watermark column to identify changes.",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "GetMaxWatermarkValue",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [
													{
														"name": "Source",
														"value": "@{item().SourceSchemaName}.@{item().SourceObjectName}"
													},
													{
														"name": "Destination",
														"value": "@{item().SinkSchemaName}.@{item().SinkObjectName}"
													}
												],
												"typeProperties": {
													"source": {
														"type": "AzureSqlSource",
														"sqlReaderQuery": {
															"value": "select * from [@{item().SourceSchemaName}].[@{item().SourceObjectName}] \n    where [@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}] > @{if(contains(json(item().DataLoadingBehaviorSettings).watermarkColumnType, 'Int'),\n    json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue, \n    concat('''', json(item().DataLoadingBehaviorSettings).watermarkColumnStartValue, ''''))}\n    and [@{json(item().DataLoadingBehaviorSettings).watermarkColumnName}] <= @{if(contains(json(item().DataLoadingBehaviorSettings).watermarkColumnType, 'Int'),\n    activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue, \n    concat('''', activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue, ''''))}",
															"type": "Expression"
														},
														"isolationLevel": {
															"value": "@{json(item().CopySourceSettings).isolationLevel}",
															"type": "Expression"
														},
														"partitionOption": {
															"value": "@json(item().CopySourceSettings).partitionOption",
															"type": "Expression"
														},
														"partitionSettings": {
															"partitionColumnName": {
																"value": "@{json(item().CopySourceSettings).partitionColumnName}",
																"type": "Expression"
															},
															"partitionUpperBound": {
																"value": "@{json(item().CopySourceSettings).partitionUpperBound}",
																"type": "Expression"
															},
															"partitionLowerBound": {
																"value": "@{json(item().CopySourceSettings).partitionLowerBound}",
																"type": "Expression"
															},
															"partitionNames": "@json(item().CopySourceSettings).partitionNames"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBatchSize": {
															"value": "@json(item().CopySinkSettings).writeBatchSize",
															"type": "Expression"
														},
														"preCopyScript": {
															"value": "@{json(item().CopySinkSettings).preCopyScript}",
															"type": "Expression"
														},
														"maxConcurrentConnections": {
															"value": "@json(item().CopySinkSettings).maxConcurrentConnections",
															"type": "Expression"
														},
														"writeBehavior": {
															"value": "@json(item().CopySinkSettings).writeBehavior",
															"type": "Expression"
														},
														"sqlWriterUseTableLock": {
															"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
															"type": "Expression"
														},
														"upsertSettings": {
															"value": "@json(item().CopySinkSettings).upsertSettings",
															"type": "Expression"
														},
														"tableOption": {
															"value": "@{json(item().CopySinkSettings).tableOption}",
															"type": "Expression"
														},
														"disableMetricsCollection": {
															"value": "@json(item().CopySinkSettings).disableMetricsCollection",
															"type": "Expression"
														}
													},
													"enableStaging": false,
													"validateDataConsistency": false,
													"translator": {
														"value": "@json(\n    concat(\n        '{\n            \"type\": \"TabularTranslator\",\n            \"mappings\": ',    \n            activity('GetObjectColumnMapping').output.firstRow.JSON_OUTPUT,\n            ',\n            \"typeConversion\": true,\n            \"typeConversionSettings\": {\n                \"allowDataTruncation\": true,\n                \"treatBooleanAsNumber\": false\n            }\n        }'\n    )\n)",
														"type": "Expression"
													}
												},
												"inputs": [
													{
														"referenceName": "ds_asql_Source",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": "@item().SourceSchemaName",
															"ObjectName": {
																"value": "@item().SourceObjectName",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "ds_asql_Bronze",
														"type": "DatasetReference",
														"parameters": {
															"SchemaName": {
																"value": "@item().SinkSchemaName",
																"type": "Expression"
															},
															"ObjectName": {
																"value": "@item().SinkObjectName",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "UpdateWatermarkColumnValue",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "DeltaLoadOneObject",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[Control].[UpdateWatermarkColumnValue]",
													"storedProcedureParameters": {
														"Id": {
															"value": {
																"value": "@item().Id",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"watermarkColumnStartValue": {
															"value": {
																"value": "@activity('GetMaxWatermarkValue').output.firstRow.CurrentMaxWaterMarkColumnValue",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Metadata_LS",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "DefaultFullLoadOneObject",
										"description": "Take a full snapshot on this object and copy it to the destination",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [
											{
												"name": "Source",
												"value": "@{item().SourceSchemaName}.@{item().SourceObjectName}"
											},
											{
												"name": "Destination",
												"value": "@{item().SinkSchemaName}.@{item().SinkObjectName}"
											}
										],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "@json(item().CopySourceSettings).sqlReaderQuery",
													"type": "Expression"
												},
												"isolationLevel": {
													"value": "@json(item().CopySourceSettings).isolationLevel",
													"type": "Expression"
												},
												"partitionOption": {
													"value": "@json(item().CopySourceSettings).partitionOption",
													"type": "Expression"
												},
												"partitionSettings": {
													"partitionColumnName": {
														"value": "@json(item().CopySourceSettings).partitionColumnName",
														"type": "Expression"
													},
													"partitionUpperBound": {
														"value": "@json(item().CopySourceSettings).partitionUpperBound",
														"type": "Expression"
													},
													"partitionLowerBound": {
														"value": "@json(item().CopySourceSettings).partitionLowerBound",
														"type": "Expression"
													},
													"partitionNames": "@json(item().CopySourceSettings).partitionNames"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBatchSize": {
													"value": "@json(item().CopySinkSettings).writeBatchSize",
													"type": "Expression"
												},
												"preCopyScript": {
													"value": "@{json(item().CopySinkSettings).preCopyScript}",
													"type": "Expression"
												},
												"maxConcurrentConnections": {
													"value": "@json(item().CopySinkSettings).maxConcurrentConnections",
													"type": "Expression"
												},
												"writeBehavior": {
													"value": "@json(item().CopySinkSettings).writeBehavior",
													"type": "Expression"
												},
												"sqlWriterUseTableLock": {
													"value": "@json(item().CopySinkSettings).sqlWriterUseTableLock",
													"type": "Expression"
												},
												"upsertSettings": {
													"value": "@json(item().CopySinkSettings).upsertSettings",
													"type": "Expression"
												},
												"tableOption": {
													"value": "@{json(item().CopySinkSettings).tableOption}",
													"type": "Expression"
												},
												"disableMetricsCollection": {
													"value": "@json(item().CopySinkSettings).disableMetricsCollection",
													"type": "Expression"
												}
											},
											"enableStaging": false,
											"validateDataConsistency": false,
											"translator": {
												"value": "@json(\n    concat(\n        '{\n            \"type\": \"TabularTranslator\",\n            \"mappings\": ',    \n            activity('GetObjectColumnMapping').output.firstRow.JSON_OUTPUT,\n            ',\n            \"typeConversion\": true,\n            \"typeConversionSettings\": {\n                \"allowDataTruncation\": true,\n                \"treatBooleanAsNumber\": false\n            }\n        }'\n    )\n)",
												"type": "Expression"
											}
										},
										"inputs": [
											{
												"referenceName": "ds_asql_Source",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": {
														"value": "@item().SourceSchemaName",
														"type": "Expression"
													},
													"ObjectName": {
														"value": "@item().SourceObjectName",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "ds_asql_Bronze",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": "@item().SinkSchemaName",
													"ObjectName": {
														"value": "@item().SinkObjectName",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						},
						{
							"name": "InsertTaskSucceedStatus",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "RouteJobsBasedOnLoadingBehavior",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Control].[InsertTaskStatus]",
								"storedProcedureParameters": {
									"TaskId": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Status": {
										"value": "1",
										"type": "Int16"
									},
									"ErrorMessage": {
										"value": "",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Metadata_LS",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "InsertTaskFailStatus",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "RouteJobsBasedOnLoadingBehavior",
									"dependencyConditions": [
										"Failed"
									]
								},
								{
									"activity": "GetObjectColumnMapping",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[Control].[InsertTaskStatus]",
								"storedProcedureParameters": {
									"TaskId": {
										"value": {
											"value": "@item().Id",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"Status": {
										"value": "0",
										"type": "Int16"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('RouteJobsBasedOnLoadingBehavior').output.value",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Metadata_LS",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "GetObjectColumnMapping",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[Control].[GetColumnMapping]",
									"storedProcedureParameters": {
										"MappingId": {
											"type": "Int32",
											"value": {
												"value": "@item().MappingId",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "MetadataDS",
									"type": "DatasetReference"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"ObjectsPerGroupToCopy": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "Ingestion"
		},
		"annotations": [],
		"lastPublishTime": "2025-06-07T14:15:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}